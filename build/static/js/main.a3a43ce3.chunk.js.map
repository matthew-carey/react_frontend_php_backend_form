{"version":3,"sources":["contact-page.js","index.js"],"names":["ContactPage","state","inputEmail","inputCheckBoth","inputCheckPizza","inputCheckTacos","inputMessage","inputName","isCaptchaValid","isErrorShown","isFormValid","handleInput","event","target","value","length","name","_this","setState","Object","defineProperty","test","String","toLowerCase","handleCheckbox","checked","onCaptchaLoad","console","log","onCaptchaVerify","response","handleFormSubmit","preventDefault","$","ajax","data","type","url","success","info","error","xhr","status","err","toString","react_default","a","createElement","className","action","htmlFor","onChange","this","id","required","onClick","defaultChecked","react_recaptcha_default","onloadCallback","sitekey","render","verifyCallback","isFormSubmitted","Component","ReactDOM","contact_page_ContactPage","document","getElementById"],"mappings":"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","file":"static/js/main.a3a43ce3.chunk.js","sourcesContent":["// Import React and ReactDOM\r\nimport React, { Component } from 'react'\r\n\r\n// Import jQuery\r\nimport $ from 'jquery'\r\n\r\n// Import reCaptcha\r\nimport Recaptcha from 'react-recaptcha'\r\n\r\n// Import some simple styles for contact form\r\nimport './styles/styles.css'\r\n\r\nexport default class ContactPage extends Component {\r\n  state = {\r\n    inputEmail: '',\r\n    inputCheckBoth: false,\r\n    inputCheckPizza: false,\r\n    inputCheckTacos: false,\r\n    inputMessage: '',\r\n    inputName: '',\r\n    isCaptchaValid: false,\r\n    isErrorShown: false,\r\n    isFormValid: false\r\n  }\r\n\r\n  // Handle visitor's interaction with inputs\r\n  handleInput = event => {\r\n    // Test for input and length of the value\r\n    if (event.target.value.length > 0 && event.target.name !== 'inputEmail') {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    }\r\n\r\n    // If input is for email address validate it with regexp\r\n    if (event.target.name === 'inputEmail') {\r\n      // eslint-disable-next-line\r\n      const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n      if (reg.test(String(event.target.value).toLowerCase())) {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle visitor's interaction with checkboxes\r\n  handleCheckbox = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.checked\r\n    })\r\n  }\r\n\r\n  // Show message in console when reCaptcha plugin is loaded\r\n  onCaptchaLoad = () => {\r\n    console.log('Captcha loaded')\r\n  }\r\n\r\n  // Update state after reCaptcha validates visitor\r\n  onCaptchaVerify = (response) => {\r\n    this.setState({\r\n      isCaptchaValid: true\r\n    })\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault()\r\n\r\n    // Test\r\n    if (this.state.inputEmail.length > 0 && this.state.inputName.length > 0 && this.state.inputMessage.length > 0 && this.state.isCaptchaValid) {\r\n      this.setState({\r\n        isErrorShown: false,\r\n        isFormValid: true\r\n      })\r\n\r\n      // Send the form with AJAX\r\n      $.ajax({\r\n        data: this.state,\r\n        type: 'POST',\r\n        url: '/mailer.php',\r\n        success: function(data) {\r\n          console.info(data)\r\n        },\r\n        error: function(xhr, status, err) {\r\n          console.error(status, err.toString())\r\n        }\r\n      })\r\n\r\n      // Reset state after sending the form\r\n      this.setState({\r\n        inputEmail: '',\r\n        inputCheckBoth: false,\r\n        inputCheckPizza: false,\r\n        inputCheckTacos: false,\r\n        inputMessage: '',\r\n        inputName: '',\r\n        isCaptchaValid: false,\r\n        isErrorShown: false,\r\n        isFormValid: false\r\n      })\r\n    } else {\r\n      // Show error message\r\n      this.setState({\r\n        isErrorShown: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-page\">\r\n          <h1>Heading</h1>\r\n          <p>Introductory paragraph.</p>\r\n\r\n        <form action=\"\">\r\n          <fieldset>\r\n            <label htmlFor=\"inputName\">Name</label>\r\n            <input onChange={this.handleInput} type=\"text\" name=\"inputName\" id=\"inputName\" required={true} />\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n            <label htmlFor=\"inputEmail\">Email</label>\r\n            <input onChange={this.handleInput} type=\"email\" name=\"inputEmail\" id=\"inputEmail\" required={true} />\r\n          </fieldset>\r\n\r\n          <div className=\"form__row\">\r\n            <div className=\"form__col\">\r\n              <fieldset>\r\n                <label htmlFor=\"inputCheckPizza\">\r\n                  <input onClick={this.handleCheckbox} type=\"checkbox\" name=\"inputCheckPizza\" id=\"inputCheckPizza\" defaultChecked={false} />\r\n                  <span>Pizza</span>\r\n                </label>\r\n              </fieldset>\r\n            </div>\r\n\r\n            <div className=\"form__col\">\r\n              <fieldset>\r\n                <label htmlFor=\"inputCheckTacos\">\r\n                  <input onClick={this.handleCheckbox} type=\"checkbox\" name=\"inputCheckTacos\" id=\"inputCheckTacos\" defaultChecked={false} />\r\n                  <span>Tacos</span>\r\n                </label>\r\n              </fieldset>\r\n            </div>\r\n\r\n            <div className=\"form__col\">\r\n              <fieldset>\r\n                <label htmlFor=\"inputCheckBoth\">\r\n                  <input onClick={this.handleCheckbox} type=\"checkbox\" name=\"inputCheckBoth\" id=\"inputCheckBoth\" defaultChecked={false} />\r\n                  <span>Pizza &amp; Tacos</span>\r\n                </label>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n\r\n          <fieldset>\r\n            <label>message</label>\r\n            <textarea onChange={this.handleInput} name=\"inputMessage\" id=\"inputMessage\" required={true} />\r\n          </fieldset>\r\n\r\n          {/* !! */}\r\n          {/* Make sure to use your 'sitekey' for Google reCaptcha API! */}\r\n          {/* !! */}\r\n          <fieldset>\r\n            <Recaptcha\r\n              onloadCallback={this.onCaptchaLoad}\r\n              sitekey=\"xxxxxxxxxxxxxxx\"\r\n              render=\"explicit\"\r\n              verifyCallback={this.onCaptchaVerify}\r\n            />\r\n          </fieldset>\r\n\r\n          {this.state.isFormSubmitted && (\r\n            <fieldset>\r\n              <p>Thank you.</p>\r\n            </fieldset>\r\n          )}\r\n\r\n          {this.state.isErrorShown && (\r\n            <fieldset>\r\n              <p>Please make sure to fill all fields.</p>\r\n            </fieldset>\r\n          )}\r\n\r\n          <fieldset>\r\n            <button onClick={this.handleFormSubmit} className=\"btn\">\r\n              Send\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}","// Import React and ReactDOM\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// Import contact page\r\nimport ContactPage from './contact-page'\r\n\r\n// Render contact page in DOM\r\nReactDOM.render(<ContactPage />, document.getElementById('root'))"],"sourceRoot":""}